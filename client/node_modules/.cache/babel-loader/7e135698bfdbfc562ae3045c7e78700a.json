{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/PI-Dogs-main/client/src/components/filtertemperament/filterTemperament.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTemperament, filterTemperaments } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterTemperament = () => {\n  _s();\n  const dispatch = useDispatch();\n  const allTemperament = useSelector(state => state.filteredTemperament);\n  const allCharacters = useSelector(state => state.charactersDogs);\n  useEffect(() => {\n    dispatch(getTemperament());\n  }, [dispatch]);\n  const handleFilterChange = e => {\n    const selectedTemperament = e.target.value;\n    dispatch(filterTemperaments(selectedTemperament, allCharacters));\n    // Aquí deberías realizar un dispatch de la acción para filtrar por temperamento\n    // Puedes utilizar la misma lógica que en la acción para filtrar por nombre o crear una nueva acción similar para el filtrado por temperamento\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleFilterChange,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"For Temperament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"allcharacters\",\n      children: \"All dogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), allTemperament.map(temp => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: temp.name,\n        children: temp.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterTemperament, \"410qX1L/y+YWb6NqSschKWHIfAg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = FilterTemperament;\nexport default FilterTemperament;\nvar _c;\n$RefreshReg$(_c, \"FilterTemperament\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getTemperament","filterTemperaments","jsxDEV","_jsxDEV","FilterTemperament","_s","dispatch","allTemperament","state","filteredTemperament","allCharacters","charactersDogs","handleFilterChange","e","selectedTemperament","target","value","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","map","temp","name","_c","$RefreshReg$"],"sources":["/Users/luciano/Desktop/PI-Dogs-main/client/src/components/filtertemperament/filterTemperament.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTemperament, filterTemperaments } from \"../../redux/actions\";\n\nconst FilterTemperament = () => {\n  const dispatch = useDispatch();\n  const allTemperament = useSelector((state) => state.filteredTemperament);\n  const allCharacters = useSelector((state) => state.charactersDogs);\n\n\n  useEffect(() => {\n    dispatch(getTemperament());\n  }, [dispatch]);\n\n  const handleFilterChange = (e) => {\n    const selectedTemperament = e.target.value;\n    dispatch(filterTemperaments(selectedTemperament, allCharacters));\n    // Aquí deberías realizar un dispatch de la acción para filtrar por temperamento\n    // Puedes utilizar la misma lógica que en la acción para filtrar por nombre o crear una nueva acción similar para el filtrado por temperamento\n  };\n\n  return (\n    <select onChange={handleFilterChange}>\n        <option>For Temperament</option>\n        <option value=\"allcharacters\">All dogs</option>\n        {allTemperament.map((temp) => {\n            return(\n                <option value={temp.name}>{temp.name}</option>\n            )\n        })}\n    </select>\n  );\n};\n\nexport default FilterTemperament;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,kBAAkB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,cAAc,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,mBAAmB,CAAC;EACxE,MAAMC,aAAa,GAAGX,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACG,cAAc,CAAC;EAGlEd,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACN,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEd,MAAMM,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,mBAAmB,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC1CV,QAAQ,CAACL,kBAAkB,CAACa,mBAAmB,EAAEJ,aAAa,CAAC,CAAC;IAChE;IACA;EACF,CAAC;;EAED,oBACEP,OAAA;IAAQc,QAAQ,EAAEL,kBAAmB;IAAAM,QAAA,gBACjCf,OAAA;MAAAe,QAAA,EAAQ;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChCnB,OAAA;MAAQa,KAAK,EAAC,eAAe;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9Cf,cAAc,CAACgB,GAAG,CAAEC,IAAI,IAAK;MAC1B,oBACIrB,OAAA;QAAQa,KAAK,EAAEQ,IAAI,CAACC,IAAK;QAAAP,QAAA,EAAEM,IAAI,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAEtD,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb,CAAC;AAACjB,EAAA,CA5BID,iBAAiB;EAAA,QACJN,WAAW,EACLC,WAAW,EACZA,WAAW;AAAA;AAAA2B,EAAA,GAH7BtB,iBAAiB;AA8BvB,eAAeA,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}